name: Zied branch CI/CD Pipeline

on:
  push:
    branches: [ "Zied" ]
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  install_dependencies:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar

      - name: Validate Maven wrapper
        run: mvn -v
        working-directory: ./pi

  build_project:
    needs: install_dependencies
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Build JAR (skip tests)
        run: mvn clean package -DskipTests
        working-directory: ./pi

      - name: List target directory
        run: ls -l ./pi/target

  sonarcloud_scan:
    needs: build_project
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: SonarCloud scan
        run: mvn -B verify -DskipTests org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=ziedtuihri_PI_BackEnd
        working-directory: ./pi
        env:
          SONAR_TOKEN: ${{ secrets.SONARCLOUD_SECRET_TOKEN }}

  docker_build_and_push:
    needs: sonarcloud_scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Log in to Nexus
        run: echo "${{ secrets.NEXUS_PASSWORD }}" | docker login f41d-102-104-219-38.ngrok-free.app --username ${{ secrets.NEXUS_USERNAME }} --password-stdin

      - name: Build Docker image
        run: docker build -t f41d-102-104-219-38.ngrok-free.app/repository/docker-hosted/pi-app:latest .
        working-directory: ./pi

      - name: Push Docker image
        run: docker push f41d-102-104-219-38.ngrok-free.app/repository/docker-hosted/pi-app:latest

  docker-hub:
    runs-on: ubuntu-latest
    needs: docker_build_and_push
    defaults:
      run:
        working-directory: ./gestion-match
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Package jar for Docker
        run: mvn clean package

      - name: Build Docker image
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/gestion-match:latest .

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin

      - name: Push image to Docker Hub
        run: docker push ${{ secrets.DOCKER_USERNAME }}/gestion-match:latest