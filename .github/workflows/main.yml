name: Java CI with Maven

on:
  push:
    branches: [ "Zied" ]
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # ==============================
      # ðŸŸ¢ Stage 1: Checkout & Setup
      # ==============================
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar

      # ==============================
      # ðŸ”µ Stage 2: Build JAR
      # ==============================
      - name: Build JAR with Maven
        run: mvn clean package -DskipTests
        working-directory: ./pi

      - name: List target directory
        run: ls -l ./pi/target

      # ==============================
      # ðŸŸ  Stage 3: SonarCloud Analysis
      # ==============================
      - name: Run SonarCloud Scan with Maven
        run: mvn -B verify -DskipTests org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=ziedtuihri_PI_BackEnd
        working-directory: ./pi
        env:
          SONAR_TOKEN: ${{ secrets.SONARCLOUD_SECRET_TOKEN }}

      # ==============================
      # ðŸŸ¡ Stage 4: Docker Login
      # ==============================
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Log in to Nexus Docker registry
        run: echo "${{ secrets.NEXUS_PASSWORD }}" | docker login ebc0-102-104-219-38.ngrok-free.app --username ${{ secrets.NEXUS_USERNAME }} --password-stdin

      # ==============================
      # ðŸ”´ Stage 5: Build & Push Docker Image
      # ==============================
      - name: Build Docker image
        run: docker build -t ebc0-102-104-219-38.ngrok-free.app/repository/docker-hosted/pi-app:latest .
        working-directory: ./pi

      - name: Push Docker image to Nexus
        run: docker push ebc0-102-104-219-38.ngrok-free.app/repository/docker-hosted/pi-app:latest
